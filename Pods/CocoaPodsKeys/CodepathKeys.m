//
// Generated by CocoaPods-Keys
// on 03/11/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "CodepathKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation CodepathKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(CodepathKeys *, SEL) = NULL;

  if ([key isEqualToString:@"pocketSdkConsumerKey"]) {
    implementation = _podKeys115181847f2855a84d17675986db7b65;
  }

  if ([key isEqualToString:@"readabilityToken"]) {
    implementation = _podKeys0dd218a811b66ac12d389637df9ac21c;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys115181847f2855a84d17675986db7b65(CodepathKeys *self, SEL _cmd)
{
  
    
      char cString[31] = { CodepathKeysData[65], CodepathKeysData[221], CodepathKeysData[1642], CodepathKeysData[1385], CodepathKeysData[866], CodepathKeysData[172], CodepathKeysData[1730], CodepathKeysData[1386], CodepathKeysData[1649], CodepathKeysData[1722], CodepathKeysData[917], CodepathKeysData[613], CodepathKeysData[989], CodepathKeysData[1190], CodepathKeysData[1243], CodepathKeysData[994], CodepathKeysData[1102], CodepathKeysData[806], CodepathKeysData[765], CodepathKeysData[434], CodepathKeysData[1518], CodepathKeysData[1282], CodepathKeysData[1319], CodepathKeysData[283], CodepathKeysData[734], CodepathKeysData[1211], CodepathKeysData[501], CodepathKeysData[1520], CodepathKeysData[71], CodepathKeysData[1856], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys0dd218a811b66ac12d389637df9ac21c(CodepathKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { CodepathKeysData[1040], CodepathKeysData[946], CodepathKeysData[713], CodepathKeysData[609], CodepathKeysData[136], CodepathKeysData[78], CodepathKeysData[1459], CodepathKeysData[1675], CodepathKeysData[573], CodepathKeysData[1322], CodepathKeysData[1327], CodepathKeysData[704], CodepathKeysData[26], CodepathKeysData[369], CodepathKeysData[853], CodepathKeysData[1578], CodepathKeysData[455], CodepathKeysData[1350], CodepathKeysData[1773], CodepathKeysData[1306], CodepathKeysData[262], CodepathKeysData[969], CodepathKeysData[404], CodepathKeysData[1069], CodepathKeysData[358], CodepathKeysData[526], CodepathKeysData[1343], CodepathKeysData[320], CodepathKeysData[1440], CodepathKeysData[891], CodepathKeysData[72], CodepathKeysData[1629], CodepathKeysData[480], CodepathKeysData[1231], CodepathKeysData[382], CodepathKeysData[101], CodepathKeysData[1756], CodepathKeysData[96], CodepathKeysData[841], CodepathKeysData[148], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char CodepathKeysData[1870] = "NpB4pv1aj3rJbGaCHMdD3jP3LO1xHhzpB1yVI9pc1WR9Xxl0jCA+8hf9tE+Qb/cRm4DNcF/b0zn6Vn9BVE1doWJ3EUVrmtBG1CzkxflpjP2PqlP+9uWW+jxhvjIDvZs37BljU0D85DCvPAPfw7dA5xbaMpyFMXp6MEm198f9ykE/-+vNVxvRmMoq/oiJYkHMIQkrjrFMhMPebrAsg8BcSAi6vxUW07p9T7ahMCwVeoGmCTn+LmjMV/6J83Wuw+G4N1m5VY5oDW0Fu9aVB+75Qnpbmz88bj+3psMkKG2gA8IrHGE6c6jF42t6yAHBsihA2na1MZCmy6rL1/6c//9AKZ4ys+ioHeNGBLqJ3naCRyUQYxL4mbGVLzWrO+qJUpbK3DkQEc4mu80VtkxJwhHe4KcQqTzEcvANl/gYfPHuAMyoCzcrXXbOBu+kxckdyky9RykaB0rdXDjmz96B6mD6GhEsQjlLvKjj9tmVKUYA6AR2EHTwcVMlG9gN2a07VG4/AaTqgXjPskoOKx9FODtE6agcjFK0ukuq9WsNbRtKnXB6Nq20fWKmKiu7zISu9bVdgM5Ei6QA6K1t3WiWVo6WAebY1wT1VEUGcbtNqboOvwh3OOc9qp6HaYu/Ru5/kdLQgbTpOi5Y28U6FzmH8Y2ToB0GQPJhZk/nmzMDRQMAtu6xcXcItKlr0X89veFEaANX1FMLCfwGI8MbIJYOsOyE0hdzqd0ZeV6I22vXbRrgW+a3x+381HpC5Ay4vDtI4b6BmIX7+YDHvxcyvRak9RpG5HRy5GsnZkeme9orCPb3NcW525Y/Wr12SzmxSNx46P+TQJj5b4CF5byb91Dz5+9nL3OGc5PTIBFU326xeYIbZw/wnsSlo54pymbGknZ2Fa8pU1eRTZrhz7oNrIgGGldMb4PcsjJ52AqAJRlziLR3Wk+dlqLcGn6N080b+SDXZeeSwkAEX7StUcYSG0laGZgtSaPKXdj/qdU5Z60szB+Yuhm0j5DosEfPvguAgAMRxttPnB9HeGm8RXsUO21ycQqBD6NEQtTViMXMZDwnfdHBSiYAb0IG46vi58Ypth2oE1DzbyqcMhj2Nhl90g1tKZugbSVO0elnG6PZ/f2GMO6F3Ms6AspBgr/fgWM4Ec+TlKqIgYzJh7V4PjpvF9UE1NA+eY0Jp3a+kTC/weZzjR2hhkEHM4+US5tkMHXLm/L86rReUwZQj/208yXX41HfXvLaxjTIR+NeTw7D35ARD77sw2RyBLsMluRzSO7hauQwjBT0eu477YtruvJNwPwBWMEpfiVMux0DuJHPR9eL0f62aw0KauJ7F7IgWzILCEoZkQK1Ww4Q8S3Uq46vuW93EfzZepZoKGFqYAXRDi2rPHrx080YAYk0SDvPaL/TXELJcgIGuKYfbpDbgJ7lS1+Pl4quETRESBIWOUwHf8VmWA3URYI8C3Hiwcp3/40Q9Wx31rE8kMbG+fY/xpYpgL2F+vrmYlpy/D0RbQrtH3ouSZ778XQgDg3q4YFHVICw6JTEXEuS+mFFRKWSM07z3UknNERaANqEbmGOURdCckoA+tqovZbSOnq2dGvoqMi5HQXkEdjoLqTFrbsFO4ouNuBh62L0m10VQehtB7xJXwNhgO1Vjl2M/b2zna5SEkRf8bkf0x+vBQelZyWzxan5V+lFXDnmOKCro2TVJUIE+4390TwPmRMaOQy6MP4WJGN2IC21jXBH7M6XIO0R9vIyeHe0bFNAogidgpqDfE/qF7ZtdPG7MiGog9wFNCghIv9DbqO6b2vr1fm2xkBAxBtBjBPNn939XWaDB1wpgeKp74aThA9qAWzoT38fMAHbNy16JS8kvjqz0sXkS3rDHz0=\\\"";

- (NSString *)description
{
  return [@{
            @"pocketSdkConsumerKey": self.pocketSdkConsumerKey,
            @"readabilityToken": self.readabilityToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
